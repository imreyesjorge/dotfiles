;; Variables Definitions
(defvar isDateShown false)

(defpoll time
  :interval "10s"
  "date '+%H:%M'"
)

;; Shorter window title must be provided, as this is
;; stretching the topbar.
(deflisten focused-window :initial ""
  'leftwm-state -s "{{ window_title }}"'
)

(deflisten wmstate :initial ""
  "leftwm state"
)

(defpoll volume :interval "1s"
  "pulsemixer --get-volume | awk '{print $1}'"
)

(defpoll outdated :interval "1s"
  "pacman -Qu | wc -l"
)

;; Widgets Containers Definitions

(defwidget bar []
  (centerbox
    :class "topbar"
    :orientation "h"
    (left-container)
    (center-container)
    (right-container)
  )
)

(defwidget left-container []
  (box
    :halign "start"
    :class "widget-container"
    (workspaces)
  )
)

(defwidget center-container []
  (box
    :class "widget-container"
    "“Sometimes even to live is an act of courage” — Seneca"
  )
)

(defwidget right-container []
  (box
    :halign "end"
    :class "widget-container"
    (eventbox
      :cursor "pointer"
      (scale :value volume :min 0 :max 100 :orientation "h" :onchange "pulsemixer --set-volume {}")
    )
    (clock)
  )
)

;; Widgets Definitions

(defwidget clock []
  (eventbox
    (box
      :spacing 10
      time
      (box
        (image :path "bar/icons/package_icon_white.svg" :image-width 15 :image-height 15)
        outdated
      )
   )
  )
)



(defwidget workspaces []
  (box
    :class "workspaces"
    :orientation "h"
    :space-evenly true
    :spacing 10
    (for tag in '${wmstate.workspaces[0].tags}'
      (button
        :class {  tag.mine ? "ws-button-mine" :
        tag.visible ? "ws-button-visible" :
        tag.urgent ? "ws-button-urgent" :
        tag.busy ? "ws-button-busy" : "ws-button"
        }
        :onclick "leftwm-command \"SendWorkspaceToTag 0 ${tag.index}\""
	:width 19 
	""
      )
    )
  )
)

;; Windows Definitions

(defwindow topbar
  :monitor 0
  :geometry (geometry :x "0px"
    :y "10px"
    :width "98%"
    :height "20px"
    :anchor "top center"
  )
  :reserve (struts :distance "25px" :side "top")
  :stacking "fg"
  :windowtype "dock"
  :wm-ignore false
  (bar)
)
